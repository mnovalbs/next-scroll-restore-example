import { useState, useEffect, useCallback } from "react";
import Head from "next/head";
import Link from "next/link";
import axios from "axios";
import { useRouterScroll } from "@moxy/next-router-scroll";
import { useRecoilState } from "recoil";
import userStore from "../../stores/users";
import styles from "../../styles/Home.module.css";
import userStyles from "../../styles/User.module.css";

function User(user) {
  const { id, name, image } = user;

  return (
    <div className={userStyles.container}>
      <Link href={`/user/${id}`} scroll>
        <img src={image} />
      </Link>
      <div>
        <label>{name}</label>
      </div>
    </div>
  );
}

export default function UserList() {
  const [savedUsers, setSavedUsers] = useRecoilState(userStore);
  const [page, setPage] = useState(0);
  const [users, setUsers] = useState([]);
  const { updateScroll } = useRouterScroll();

  const addUsers = (newUsers) => {
    setUsers((currentUsers) => currentUsers.concat(newUsers));
    setPage((currentPage) => currentPage + 1);
  };

  const fetchData = (apiPage) => {
    axios
      .get("/api/user", {
        params: {
          page: apiPage,
          limit: 10,
        },
      })
      .then(({ data }) => data.data)
      .then(addUsers);
  };

  const divRef = useCallback(
    (node) => {
      const { locationKey } = window.history.state;
      const initialUsers = savedUsers[locationKey]?.users || [];
      const initialPage = savedUsers[locationKey]?.page || 0;

      setUsers(initialUsers);
      setPage(initialPage);

      if (node) {
        updateScroll();
      }

      if (initialPage === 0) {
        fetchData(initialPage + 1);
      }
    },
    [updateScroll]
  );

  useEffect(() => {
    const { locationKey } = window.history.state;
    setSavedUsers((currentSavedUsers) => ({
      ...currentSavedUsers,
      [locationKey]: {
        users,
        page,
      },
    }));
  }, [users, page]);

  return (
    <div ref={divRef} className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {users.map((user, i) => (
        <User {...user} key={i} />
      ))}
    </div>
  );
}
